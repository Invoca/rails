diff --git a/actionpack/lib/action_controller/base.rb b/actionpack/lib/action_controller/base.rb
index 4da83a7..86985c3 100644
--- a/actionpack/lib/action_controller/base.rb
+++ b/actionpack/lib/action_controller/base.rb
@@ -116,7 +116,7 @@ module ActionController
   #
   #   Title: <%= @post.title %>
   #
-  # You don't have to rely on the automated rendering. For example, actions that could result in the rendering of different templates 
+  # You don't have to rely on the automated rendering. For example, actions that could result in the rendering of different templates
   # will use the manual rendering methods:
   #
   #   def search
@@ -133,7 +133,7 @@ module ActionController
   # == Redirects
   #
   # Redirects are used to move from one action to another. For example, after a <tt>create</tt> action, which stores a blog entry to the
-  # database, we might like to show the user the new entry. Because we're following good DRY principles (Don't Repeat Yourself), we're 
+  # database, we might like to show the user the new entry. Because we're following good DRY principles (Don't Repeat Yourself), we're
   # going to reuse (and redirect to) a <tt>show</tt> action that we'll assume has already been created. The code might look like this:
   #
   #   def create
@@ -179,6 +179,22 @@ module ActionController
       MODULES - modules
     end
 
+    def self.do_not_strip_string_parameters
+      @do_not_strip_string_parameters
+    end
+
+    def self.strip_string_parameters options
+      options.assert_valid_keys([:except])
+      @do_not_strip_string_parameters = [options[:except]].compact.flatten
+    end
+
+    def process_with_strip_string_parameters(action, *args)
+      request.do_not_strip_string_parameters = self.class.do_not_strip_string_parameters
+      process_without_strip_string_parameters(action, *args)
+    end
+
+    alias_method_chain :process, :strip_string_parameters
+
     MODULES = [
       AbstractController::Layouts,
       AbstractController::Translation,
