diff --git a/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb b/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb
index c690b98..36b7e5b 100644
--- a/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb
+++ b/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb
@@ -21,6 +21,7 @@ module ActiveRecord
 
   module ConnectionAdapters
     class Mysql2Adapter < AbstractMysqlAdapter
+      attr_reader :config
 
       class Column < AbstractMysqlAdapter::Column # :nodoc:
         def adapter
@@ -63,7 +64,7 @@ module ActiveRecord
       # QUOTING ==================================================
 
       def quote_string(string)
-        @connection.escape(string)
+        non_nil_connection.escape(string)
       end
 
       # CONNECTION MANAGEMENT ====================================
@@ -83,7 +84,7 @@ module ActiveRecord
       def disconnect!
         unless @connection.nil?
           @connection.close
-          @connection = nil
+          self.connection = nil
         end
       end
 
@@ -228,7 +229,7 @@ module ActiveRecord
 
       def insert_sql(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)
         super
-        id_value || @connection.last_id
+        id_value || non_nil_connection.last_id
       end
       alias :create :insert_sql
 
@@ -238,23 +239,23 @@ module ActiveRecord
 
       def exec_delete(sql, name, binds)
         execute to_sql(sql, binds), name
-        @connection.affected_rows
+        non_nil_connection.affected_rows
       end
       alias :exec_update :exec_delete
 
       def last_inserted_id(result)
-        @connection.last_id
+        non_nil_connection.last_id
       end
 
       private
 
       def connect
-        @connection = Mysql2::Client.new(@config)
+        self.connection = Mysql2::Client.new(@config)
         configure_connection
       end
 
       def configure_connection
-        @connection.query_options.merge!(:as => :array)
+        non_nil_connection.query_options.merge!(:as => :array)
 
         # By default, MySQL 'where id is null' selects the last inserted id.
         # Turn this off. http://dev.rubyonrails.org/ticket/6778
@@ -273,7 +274,7 @@ module ActiveRecord
       end
 
       def version
-        @version ||= @connection.info[:version].scan(/^(\d+)\.(\d+)\.(\d+)/).flatten.map { |v| v.to_i }
+        @version ||= non_nil_connection.info[:version].scan(/^(\d+)\.(\d+)\.(\d+)/).flatten.map { |v| v.to_i }
       end
     end
   end
